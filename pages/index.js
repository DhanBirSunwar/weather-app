import Head from 'next/head';
import Image from 'next/image';
import axios from 'axios';
import { useState } from 'react';
import { BsSearch } from 'react-icons/bs';
import Weather from '../components/Weather';
import Spinner from '../components/Spinner';

export default function Home() {
  const [city, setCity] = useState('');
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  const fetchWeather = (e) => {
    e.preventDefault();
    setLoading(true);
    axios
      .get(url)
      .then((response) => {
        setWeather(response.data);
      })
      .catch((error) => {
        setError(`${error}. Invalid city! name.`);
      })
      .finally(() => {
        setLoading(false);
      });
    setCity('');
  };

  if (loading) {
    return <Spinner />;
  } else {
    return (
      <div>
        <Head>
          <title>Weather - Next App</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
        {/* Overlay */}
        <div className='absolute inset-0 bg-black/40 z-[1]' />
        {/* Background image */}
        <Image
          src='https://media.istockphoto.com/id/1362707719/photo/the-morning-sky-where-the-sun-is-rising-from-the-horizon.jpg?b=1&s=170667a&w=0&k=20&c=HMB7yvttjpXt4lLfXdkJX30DbmM3lTbZNyQbES93ZxQ='
          layout='fill'
          className='object-cover'
        />

        {/* Search */}
        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 px-4 text-white z-10'>
          <form
            onSubmit={fetchWeather}
            className='flex items-center justify-between w-full p-3 m-auto text-white bg-transparent border border-gray-300 rounded-2xl'
          >
            <div>
              <input
                onChange={(e) => setCity(e.target.value)}
                className='text-2xl text-white bg-transparent border-none focus:outline-none'
                type='text'
                placeholder='Search city'
              />
            </div>
            <button onClick={fetchWeather}>
              <BsSearch size={20} />
            </button>
          </form>
        </div>
        
        {/* Error */}
        {error && <div className='relative z-10 flex items-center justify-center p-4 mt-40 text-4xl text-gray-300'>{error}</div>}

        {/* Weather */}
        {weather.main && <Weather data={weather} />}
      </div>
    );
  }
}